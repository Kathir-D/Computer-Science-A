<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/CS/CS22526/Labs/Unit3/GameBoard.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CS/CS22526/Labs/Unit3/GameBoard.java" />
              <option name="originalContent" value="package CS22526.Labs.Unit3;&#10;&#10;import java.awt.Canvas;&#10;import java.awt.Color;&#10;import java.awt.Font;&#10;//(c) A+ Computer Science&#10;//www.apluscompsci.com&#10;//Name -&#10;&#10;import java.awt.Graphics;&#10;import java.awt.event.MouseEvent;&#10;import java.awt.event.MouseListener;&#10;&#10;public class GameBoard extends Canvas implements MouseListener {&#10;&#10;  private int mouseX, mouseY;&#10;  private boolean mouseClicked, gameOver;&#10;  private int mouseButton, prevMouseButton;&#10;  private Grid board;&#10;&#10;  private static final int WIDTH = 150;&#10;  private static final int HEIGHT = 150;&#10;  private static final int SCALE = 50;&#10;  private static final int BOARDSIZE = 3;&#10;&#10;  public GameBoard() {&#10;    mouseClicked = false;&#10;    mouseX = mouseY = 0;&#10;    mouseButton = 0;&#10;    prevMouseButton = -1;&#10;&#10;    board = new Grid(BOARDSIZE, BOARDSIZE);&#10;&#10;    addMouseListener(this);&#10;    setBackground(Color.WHITE);&#10;  }&#10;&#10;  public void mouseClicked(MouseEvent e) {&#10;    mouseClicked = true;&#10;    mouseX = e.getX();&#10;    mouseY = e.getY();&#10;    mouseButton = e.getButton();&#10;    repaint();&#10;  }&#10;&#10;  public void paint(Graphics window) {&#10;    window.setColor(Color.white);&#10;    window.fillRect(0, 0, 640, 480);&#10;    window.setFont(new Font(&quot;TAHOMA&quot;, Font.BOLD, 12));&#10;    window.setColor(Color.blue);&#10;    window.drawString(&quot;TIC TAC TOE&quot;, 420, 55);&#10;    window.drawString(&quot;left mouse click == [X]&quot;, 420, 85);&#10;    window.drawString(&quot;right mouse click == [O]&quot;, 420, 105);&#10;&#10;    window.drawRect(50, 50, WIDTH, HEIGHT);&#10;    window.drawRect(100, 50, WIDTH / 3, HEIGHT);&#10;    window.drawRect(50, 100, WIDTH, HEIGHT / 3);&#10;&#10;    if (mouseClicked) {&#10;      markBoard();&#10;      board.drawGrid(window);&#10;&#10;      if (determineWinner(window)) {&#10;        board = new Grid(BOARDSIZE, BOARDSIZE);&#10;        paint(window);&#10;        prevMouseButton = -1;&#10;      }&#10;      mouseClicked = false;&#10;    }&#10;  }&#10;&#10;  public void markBoard() {&#10;    if (&#10;      mouseX &gt;= WIDTH / 3 &amp;&amp;&#10;      mouseX &lt;= WIDTH + 50 &amp;&amp;&#10;      mouseY &gt;= HEIGHT / 3 &amp;&amp;&#10;      mouseY &lt;= HEIGHT + 50&#10;    ) {&#10;      int r = mouseY / 50 - 1;&#10;      int c = mouseX / 50 - 1;&#10;      Piece piece = (Piece) board.getSpot(r, c);&#10;      //if BUTTON1 was pressed and BUTTON1 was not pressed last mouse press&#10;      if (&#10;        mouseButton == MouseEvent.BUTTON1 &amp;&amp; prevMouseButton != mouseButton&#10;      ) { //left mouse button pressed&#10;        if (piece == null) {&#10;          board.setSpot(&#10;            r,&#10;            c,&#10;            new Piece(&#10;              5 + c * 50 + 50,&#10;              5 + r * 50 + 50,&#10;              WIDTH / 3 - 10,&#10;              HEIGHT / 3 - 10,&#10;              &quot;X&quot;,&#10;              Color.GREEN&#10;            )&#10;          );&#10;        }&#10;        //save the current button pressed to compare to next button pressed&#10;        prevMouseButton = mouseButton;&#10;      }&#10;      if (mouseButton == MouseEvent.BUTTON3 &amp;&amp; prevMouseButton != mouseButton) {&#10;        if (piece == null) {&#10;          board.setSpot(&#10;            r,&#10;            c,&#10;            new Piece(&#10;              5 + c * 50 + 50,&#10;              5 + r * 50 + 50,&#10;              WIDTH / 3 - 10,&#10;              HEIGHT / 3 - 10,&#10;              &quot;O&quot;,&#10;              Color.RED&#10;            )&#10;          );&#10;        } //left mouse button pressed&#10;&#10;        //save the current button pressed to compare to next button pressed&#10;        prevMouseButton = mouseButton;&#10;      }&#10;    }&#10;  }&#10;&#10;  public boolean determineWinner(Graphics window) {&#10;    String winner = &quot;&quot;;&#10;    for (int r = 0; r &lt; board.getNumRows(); r++) {&#10;      Piece row0 = (Piece) board.getSpot(r, 0);&#10;      Piece row1 = (Piece) board.getSpot(r, 1);&#10;      Piece row2 = (Piece) board.getSpot(r, 2);&#10;&#10;      if (row0 == null || row1 == null || row2 == null) continue;&#10;&#10;      if (&#10;        row0.getName().equals(row1.getName()) &amp;&amp;&#10;        row0.getName().equals(row2.getName())&#10;      ) {&#10;        winner = row0.getName() + &quot; wins horizontally!&quot;;&#10;        break;&#10;      }&#10;    }&#10;&#10;    for (int r = 0; r &lt; board.getNumRows(); r++) {&#10;      Piece row0 = (Piece) board.getSpot(0, r);&#10;      Piece row1 = (Piece) board.getSpot(1, r);&#10;      Piece row2 = (Piece) board.getSpot(2, r);&#10;&#10;      if (row0 == null || row1 == null || row2 == null) continue;&#10;&#10;      if (&#10;        row0.getName().equals(row1.getName()) &amp;&amp;&#10;        row0.getName().equals(row2.getName())&#10;      ) {&#10;        winner = row0.getName() + &quot; wins vertically!&quot;;&#10;        break;&#10;      }&#10;    }&#10;&#10;    if (winner.equals(&quot;&quot;)) {&#10;      Piece row0 = (Piece) board.getSpot(0, 0);&#10;      Piece row1 = (Piece) board.getSpot(1, 1);&#10;      Piece row2 = (Piece) board.getSpot(2, 2);&#10;&#10;      if (row0 != null &amp;&amp; row1 != null &amp;&amp; row2 != null &amp;&amp;&#10;        row0.getName().equals(row1.getName()) &amp;&amp;&#10;        row0.getName().equals(row2.getName())&#10;      ) {&#10;        winner = row0.getName() + &quot; wins diagonaly!&quot;;&#10;      }&#10;    }&#10;&#10;    if (winner.equals(&quot;&quot;)) {&#10;      Piece row0 = (Piece) board.getSpot(0, 2);&#10;      Piece row1 = (Piece) board.getSpot(1, 1);&#10;      Piece row2 = (Piece) board.getSpot(2, 0);&#10;&#10;      if (row0 != null &amp;&amp; row1 != null &amp;&amp; row2 != null &amp;&amp;&#10;        row0.getName().equals(row1.getName()) &amp;&amp;&#10;        row0.getName().equals(row2.getName())&#10;      ) {&#10;        winner = row0.getName() + &quot; wins diagonaly!&quot;;&#10;      }&#10;    }&#10;&#10;    if (winner.indexOf(&quot;no name&quot;) &gt; -1) {&#10;      board.drawGrid(window);&#10;      return false;&#10;    } else if (board.drawGrid(window) &amp;&amp; winner.length() == 0) {&#10;      winner = &quot;cat's game - no winner!\n\n&quot;;&#10;    }&#10;&#10;    if (winner.length() &gt; 0) {&#10;      window.setFont(new Font(&quot;TAHOMA&quot;, Font.BOLD, 22));&#10;      window.setColor(Color.orange);&#10;      window.drawString(winner, 320, 355);&#10;      try {&#10;        Thread.currentThread().sleep(1500);&#10;      } catch (Exception e) {}&#10;      repaint();&#10;      return true;&#10;    }&#10;    return false;&#10;  }&#10;&#10;  public void mouseEntered(MouseEvent e) {}&#10;&#10;  public void mouseExited(MouseEvent e) {}&#10;&#10;  public void mousePressed(MouseEvent e) {}&#10;&#10;  public void mouseReleased(MouseEvent e) {}&#10;}&#10;" />
              <option name="updatedContent" value="package CS22526.Labs.Unit3;&#10;&#10;import java.awt.Canvas;&#10;import java.awt.Color;&#10;import java.awt.Font;&#10;//(c) A+ Computer Science&#10;//www.apluscompsci.com&#10;//Name -&#10;&#10;import java.awt.Graphics;&#10;import java.awt.event.MouseEvent;&#10;import java.awt.event.MouseListener;&#10;&#10;public class GameBoard extends Canvas implements MouseListener {&#10;&#10;  private int mouseX, mouseY;&#10;  private boolean mouseClicked, gameOver;&#10;  private int mouseButton, prevMouseButton;&#10;  private Grid board;&#10;&#10;  private static final int WIDTH = 150;&#10;  private static final int HEIGHT = 150;&#10;  private static final int SCALE = 50;&#10;  private static final int BOARDSIZE = 3;&#10;&#10;  public GameBoard() {&#10;    mouseClicked = false;&#10;    mouseX = mouseY = 0;&#10;    mouseButton = 0;&#10;    prevMouseButton = -1;&#10;&#10;    board = new Grid(BOARDSIZE, BOARDSIZE);&#10;&#10;    addMouseListener(this);&#10;    setBackground(Color.WHITE);&#10;  }&#10;&#10;  public void mouseClicked(MouseEvent e) {&#10;    mouseClicked = true;&#10;    mouseX = e.getX();&#10;    mouseY = e.getY();&#10;    mouseButton = e.getButton();&#10;    repaint();&#10;  }&#10;&#10;  public void paint(Graphics window) {&#10;    window.setColor(Color.white);&#10;    window.fillRect(0, 0, 640, 480);&#10;    window.setFont(new Font(&quot;TAHOMA&quot;, Font.BOLD, 12));&#10;    window.setColor(Color.blue);&#10;    window.drawString(&quot;TIC TAC TOE&quot;, 420, 55);&#10;    window.drawString(&quot;left mouse click == [X]&quot;, 420, 85);&#10;    window.drawString(&quot;right mouse click == [O]&quot;, 420, 105);&#10;&#10;    window.drawRect(50, 50, WIDTH, HEIGHT);&#10;    window.drawRect(100, 50, WIDTH / 3, HEIGHT);&#10;    window.drawRect(50, 100, WIDTH, HEIGHT / 3);&#10;&#10;    if (mouseClicked) {&#10;      markBoard();&#10;      board.drawGrid(window);&#10;&#10;      if (determineWinner(window)) {&#10;        board = new Grid(BOARDSIZE, BOARDSIZE);&#10;        paint(window);&#10;        prevMouseButton = -1;&#10;      }&#10;      mouseClicked = false;&#10;    }&#10;  }&#10;&#10;  public void markBoard() {&#10;    if (&#10;      mouseX &gt;= WIDTH / 3 &amp;&amp;&#10;      mouseX &lt;= WIDTH + 50 &amp;&amp;&#10;      mouseY &gt;= HEIGHT / 3 &amp;&amp;&#10;      mouseY &lt;= HEIGHT + 50&#10;    ) {&#10;      int r = mouseY / 50 - 1;&#10;      int c = mouseX / 50 - 1;&#10;      Piece piece = (Piece) board.getSpot(r, c);&#10;      //if BUTTON1 was pressed and BUTTON1 was not pressed last mouse press&#10;      if (&#10;        mouseButton == MouseEvent.BUTTON1 &amp;&amp; prevMouseButton != mouseButton&#10;      ) { //left mouse button pressed&#10;        if (piece == null) {&#10;          board.setSpot(&#10;            r,&#10;            c,&#10;            new Piece(&#10;              5 + c * 50 + 50,&#10;              5 + r * 50 + 50,&#10;              WIDTH / 3 - 10,&#10;              HEIGHT / 3 - 10,&#10;              &quot;X&quot;,&#10;              Color.GREEN&#10;            )&#10;          );&#10;        }&#10;        //save the current button pressed to compare to next button pressed&#10;        prevMouseButton = mouseButton;&#10;      }&#10;      if (mouseButton == MouseEvent.BUTTON3 &amp;&amp; prevMouseButton != mouseButton) {&#10;        if (piece == null) {&#10;          board.setSpot(&#10;            r,&#10;            c,&#10;            new Piece(&#10;              5 + c * 50 + 50,&#10;              5 + r * 50 + 50,&#10;              WIDTH / 3 - 10,&#10;              HEIGHT / 3 - 10,&#10;              &quot;O&quot;,&#10;              Color.RED&#10;            )&#10;          );&#10;        } //left mouse button pressed&#10;&#10;        //save the current button pressed to compare to next button pressed&#10;        prevMouseButton = mouseButton;&#10;      }&#10;    }&#10;  }&#10;&#10;  public boolean determineWinner(Graphics window) {&#10;    String winner = &quot;&quot;;&#10;    for (int r = 0; r &lt; board.getNumRows(); r++) {&#10;      Piece row0 = (Piece) board.getSpot(r, 0);&#10;      Piece row1 = (Piece) board.getSpot(r, 1);&#10;      Piece row2 = (Piece) board.getSpot(r, 2);&#10;&#10;      if (row0 == null || row1 == null || row2 == null) continue;&#10;&#10;      if (&#10;        row0.getName().equals(row1.getName()) &amp;&amp;&#10;        row0.getName().equals(row2.getName())&#10;      ) {&#10;        winner = row0.getName() + &quot; wins horizontally!&quot;;&#10;        break;&#10;      }&#10;    }&#10;&#10;    for (int r = 0; r &lt; board.getNumRows(); r++) {&#10;      Piece row0 = (Piece) board.getSpot(0, r);&#10;      Piece row1 = (Piece) board.getSpot(1, r);&#10;      Piece row2 = (Piece) board.getSpot(2, r);&#10;&#10;      if (row0 == null || row1 == null || row2 == null) continue;&#10;&#10;      if (&#10;        row0.getName().equals(row1.getName()) &amp;&amp;&#10;        row0.getName().equals(row2.getName())&#10;      ) {&#10;        winner = row0.getName() + &quot; wins vertically!&quot;;&#10;        break;&#10;      }&#10;    }&#10;&#10;    if (winner.equals(&quot;&quot;)) {&#10;      Piece row0 = (Piece) board.getSpot(0, 0);&#10;      Piece row1 = (Piece) board.getSpot(1, 1);&#10;      Piece row2 = (Piece) board.getSpot(2, 2);&#10;&#10;      if (row0 != null &amp;&amp; row1 != null &amp;&amp; row2 != null &amp;&amp;&#10;        row0.getName().equals(row1.getName()) &amp;&amp;&#10;        row0.getName().equals(row2.getName())&#10;      ) {&#10;        winner = row0.getName() + &quot; wins diagonaly!&quot;;&#10;      }&#10;    }&#10;&#10;    if (winner.equals(&quot;&quot;)) {&#10;      Piece row0 = (Piece) board.getSpot(0, 2);&#10;      Piece row1 = (Piece) board.getSpot(1, 1);&#10;      Piece row2 = (Piece) board.getSpot(2, 0);&#10;&#10;      if (row0 != null &amp;&amp; row1 != null &amp;&amp; row2 != null &amp;&amp;&#10;        row0.getName().equals(row1.getName()) &amp;&amp;&#10;        row0.getName().equals(row2.getName())&#10;      ) {&#10;        winner = row0.getName() + &quot; wins diagonaly!&quot;;&#10;      }&#10;    }&#10;&#10;    if (winner.indexOf(&quot;no name&quot;) &gt; -1) {&#10;      board.drawGrid(window);&#10;      return false;&#10;    } else if (board.drawGrid(window) &amp;&amp; winner.length() == 0) {&#10;      winner = &quot;cat's game - no winner!\n\n&quot;;&#10;    }&#10;&#10;    if (winner.length() &gt; 0) {&#10;      window.setFont(new Font(&quot;TAHOMA&quot;, Font.BOLD, 22));&#10;      window.setColor(Color.orange);&#10;      window.drawString(winner, 320, 355);&#10;      try {&#10;        Thread.currentThread().sleep(1500);&#10;      } catch (Exception e) {}&#10;      repaint();&#10;      return true;&#10;    }&#10;    return false;&#10;  }&#10;&#10;  public void mouseEntered(MouseEvent e) {}&#10;&#10;  public void mouseExited(MouseEvent e) {}&#10;&#10;  public void mousePressed(MouseEvent e) {}&#10;&#10;  public void mouseReleased(MouseEvent e) {}&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>